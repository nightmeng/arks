apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass
metadata:
  name: arks-eg
spec:
  controllerName: gateway.envoyproxy.io/gatewayclass-controller
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: arks-eg
  namespace: arks-operator-system
spec:
  gatewayClassName: arks-eg
  listeners:
    - name: http
      protocol: HTTP
      port: 80
      allowedRoutes:
        namespaces:
          from: All
  infrastructure:
    parametersRef:
      group: gateway.envoyproxy.io
      kind: EnvoyProxy
      name: akrs-custom-proxy-config
---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
metadata:
  name: akrs-custom-proxy-config
  namespace: arks-operator-system
spec:
  provider:
    type: Kubernetes
    kubernetes:
    # TODO: envoyService
      envoyDeployment:
        container:
          resources:
            requests:
              cpu: 1
              memory: 1Gi
            limits:
              cpu: 1
              memory: 1Gi
---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: ClientTrafficPolicy
metadata:
  name: client-connection-buffersize
  namespace: arks-operator-system
spec:
  targetRefs:
    - group: gateway.networking.k8s.io
      kind: Gateway
      name: akrs-eg
  connection:
    # TODO: 
    bufferLimit: 4194304
# ---
# apiVersion: gateway.envoyproxy.io/v1alpha1
# kind: EnvoyPatchPolicy
# metadata:
#   name: epp
#   namespace: arks-operator-system
# spec:
#   type: "JSONPatch"
#   targetRef:
#     group: gateway.networking.k8s.io
#     kind: Gateway
#     name: akrs-eg
#   jsonPatches:
#   - type: type.googleapis.com/envoy.config.route.v3.RouteConfiguration
#     name: "arks-operator-system/akrs-eg/http"
#     operation:
#       op: add
#       path: "/virtual_hosts/0/routes/0"
#       value:
#         name: original_route
#         match:
#           prefix: "/v1"
#           headers:
#           - name: "routing-strategy"
#             string_match:
#               safe_regex:
#                 regex: .*
#         route:  
#           cluster: original_destination_cluster
#           timeout: 120s  # Increase route timeout
#         typed_per_filter_config:
#           "envoy.filters.http.ext_proc/envoyextensionpolicy/arks-operator-system/akrs-gateway-plugins-extension-policy/extproc/0":
#             "@type": "type.googleapis.com/envoy.config.route.v3.FilterConfig"
#             "config": {}
#   - type: "type.googleapis.com/envoy.config.cluster.v3.Cluster"
#     name: "envoy-patch-policy-override2"
#     operation:
#       op: add
#       path: ""
#       value:
#         name: original_destination_cluster
#         type: ORIGINAL_DST  
#         original_dst_lb_config:
#           use_http_header: true
#           http_header_name: "target-pod"
#         connect_timeout: 6s
#         lb_policy: CLUSTER_PROVIDED
#         dns_lookup_family: V4_ONLY
  